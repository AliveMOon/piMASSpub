-----------------
HD:[b0] spc:1,0,0,0, V:1 H:0 C:0 
bSW:0x00000000
nTG:1 #main
OFF:0xfffffdff
bSW:0x00000084.[ENTER]
ComPI:[a1] spc:0, 1, 0, 0,  V:1 H:1 B:0 
bSW:0x00000084.

ASM:nP:lv[fd]	str	typ.sz
-----------------------
ASM:80:01[79]	main	main.- 	0/0
ASM:80:01[74]	class	class.- 	0/0
ASM:81:02[80]	U1x4	def.- 	0/0
ASM:81:01[48]		{	begin.- 	0/0
ASM:81:01[55]		U1	def.b 	0/0
ASM:82:03[81]		x	def.b 	1/1
ASM:82:01[05]		,	stk.- 	1/1
ASM:83:03[82]		y	def.b 	2/2
ASM:83:01[05]		,	stk.- 	2/2
ASM:84:03[83]		z	def.b 	3/3
ASM:84:01[05]		,	stk.- 	3/3
ASM:85:03[84]		w	def.b 	4/4
ASM:85:01[06]		;	newrow.- 	4/4
ASM:86:03[85]		U1x4 U1x4(	constr	4/4
ASM:86:01[55]				U1	def.b 	4/4
ASM:87:04[86]				X	def.b 	5/5
ASM:87:01[05]				,	stk.- 	5/5
ASM:88:04[87]				Y	def.b 	6/6
ASM:88:01[05]				,	stk.- 	6/6
ASM:89:04[88]				Z	def.b 	7/7
ASM:89:01[05]				,	stk.- 	7/7
ASM:90:04[89]				W	def.b 	8/8
ASM:90:01[45]				)	brake.- 	8/8
ASM:90:01[48]					{	begin.- 	8/8
ASM:90:03[81]					x	def.b 	8/8
ASM:90:01[24]					=	mov.- 	8/8
ASM:90:04[86]					X	def.b 	8/8
ASM:90:01[06]					;	newrow.- 	8/8
ASM:90:03[82]					y	def.b 	8/8
ASM:90:01[24]					=	mov.- 	8/8
ASM:90:04[87]					Y	def.b 	8/8
ASM:90:01[06]					;	newrow.- 	8/8
ASM:90:03[83]					z	def.b 	8/8
ASM:90:01[24]					=	mov.- 	8/8
ASM:90:04[88]					Z	def.b 	8/8
ASM:90:01[06]					;	newrow.- 	8/8
ASM:90:03[84]					w	def.b 	8/8
ASM:90:01[24]					=	mov.- 	8/8
ASM:90:04[89]					W	def.b 	8/8
ASM:90:01[06]					;	newrow.- 	8/8
ASM:90:01[49]			}	end.- 	4/8
ASM:90:01[49]		}	end.- 	4/8
ASM:90:01[06]		;	newrow.- 	4/8
ASM:90:02[80]		U1x4	def.l 	4/8
ASM:91:03[90]		U1x4 xyzw(	func	4/8
ASM:91:00 R4u				0 	4/8
ASM:91:01[29]				+	add.- 	4/8
ASM:91:00 R5u				3 	4/8
ASM:91:01[05]				,	stk.- 	4/8
ASM:91:00 R6u				1 	4/8
ASM:91:01[29]				+	add.- 	4/8
ASM:91:00 R7u				3 	4/8
ASM:91:01[05]				,	stk.- 	4/8
ASM:91:00 R0u				2 	4/8
ASM:91:01[29]				+	add.- 	4/8
ASM:91:00 R1u				3 	4/8
ASM:91:01[05]				,	stk.- 	4/8
ASM:91:00 R2u				3 	4/8
ASM:91:01[29]				+	add.- 	4/8
ASM:91:00 R3u				3 	4/8
ASM:91:01[45]				)	brake.- 	4/8
ASM:91:01[06]				;	newrow.- 	4/8
ASM:91:01[55]				U1	def.b 	4/8
ASM:92:04[91]				a	def.b 	5/8
ASM:92:01[24]				=	mov.- 	5/8
ASM:92:00 R4u				10 	5/8
ASM:92:01[05]				,	stk.- 	5/8
ASM:93:04[92]				b	def.b 	6/8
ASM:93:01[24]				=	mov.- 	6/8
ASM:93:00 R5u				0 	6/8
ASM:93:01[05]				,	stk.- 	6/8
ASM:94:04[93]				a1D	def.b 	7/8
ASM:94:01[46]				[	dims.- 	7/8
ASM:94:00 R6u				10 	7/8
ASM:94:01[47]				]	dime.- 	7/8
ASM:94:01[06]				;	newrow.- 	7/8
ASM:94:01[67]		! for(	cycle	7/8
ASM:94:01[57]				U4	def.l 	7/8
ASM:95:04[94]				i	def.l 	11/11
ASM:95:01[24]				=	mov.- 	11/11
ASM:95:00 R7u				0 	11/11
ASM:95:01[06]				;	newrow.- 	11/11
ASM:95:04[94]				i	def.l 	11/11
ASM:95:01[35]				<	ltlg.- 	11/11
ASM:95:00 R0u				10 	11/11
ASM:95:01[06]				;	newrow.- 	11/11
ASM:95:04[94]				i	def.l 	11/11
ASM:95:01[30]				++	inc.- 	11/11
ASM:95:01[45]				)	brake.- 	11/11
ASM:95:01[48]					{	begin.- 	11/11
ASM:95:04[91]					a	def.b 	11/11
ASM:95:01[31]					+=	addm.- 	11/11
ASM:95:01[30]					++	inc.- 	11/11
ASM:95:04[92]					b	def.b 	11/11
ASM:95:01[13]					*	mul.- 	11/11
ASM:95:00 R1u					10 	11/11
ASM:95:01[29]					+	add.- 	11/11
ASM:95:04[94]					i	def.l 	11/11
ASM:95:01[06]					;	newrow.- 	11/11
ASM:95:04[93]					a1D	def.b 	11/11
ASM:95:01[46]					[	dims.- 	11/11
ASM:95:04[94]					i	def.l 	11/11
ASM:95:01[20]					%	rem.- 	11/11
ASM:95:01[65]			! sizeof(	func	11/11
ASM:95:04[93]					a1D	def.b 	11/11
ASM:95:01[45]					)	brake.- 	11/11
ASM:95:01[47]					]	dime.- 	11/11
ASM:95:01[24]					=	mov.- 	11/11
ASM:95:04[91]					a	def.b 	11/11
ASM:95:01[06]					;	newrow.- 	11/11
ASM:95:01[49]			}	end.- 	4/11

alDAT:0BLD/VER:01
