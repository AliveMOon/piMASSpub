char gpsSHDRisoFRG[] =
"#version 120																		\n"
"varying vec2 fr_uv;																\n"
"uniform sampler2D tex0;						// MINI_CHAR_xXy_zXw.png			\n"
"uniform sampler2D tex1;						// BackGround						\n"
"uniform sampler2D tex2;						// MINI 	ABGR?					\n"
"											// U4		XYZW					\n"
"											//			cFcA 	\n"
"uniform sampler2D tex3;						// CUBE												\n"
"uniform vec2 tgPX;																	\n"
"uniform vec2 DIVxy;																	\n"
"uniform vec2 FRMwh;																	\n"
"uniform vec2 aTX[8];\n"

"#define gpdTX_lo 	tex0\n"
"#define gpdTX_loCRL	vec3( aTX[0], 4 )\n"
"#define gpdTX_loWH	vec2( 128, 1024 )\n"

"#define gpdTX_bg tex1\n"
"#define gpdTX_ut tex2\n"

"#define gpdTX_hi tex3\n"
"#define gpdTX_hiCRL	vec3( aTX[3], 4 )\n"
"#define gpdTX_hiWH	vec2( 256, 1536 )\n"

"vec2 ac_more( vec4 A )	\n"
"{	\n"
"	return A.rg; //+vec2(A.g*0x100,0);																			\n"
"}																												\n"
"vec4 cr_lut( vec2 ac, vec3 crl, vec2 lwh ) 							// crl.xyz ColRowLut // lwh LutWH		\n"
"{																					\n"
"	ac /= crl.xz; 																	\n"
"	return vec4( 																	\n"
"						floor( vec2(fract(ac.x)*crl.x, ac.x) ), 	// char				\n"
"						floor( vec2(fract(ac.y)*crl.z, ac.y) )		// LUT		  		\n"
"					)																\n"
"			/ vec4(	crl.xy, lwh );																\n"
"}	\n"
"																					\n"
"void main()																		\n"
"{																					\n"
"	vec2	frm1 = fr_uv*FRMwh,														\n"
"			frm0 = frm1/aTX[2],								// atx[2] == TXwh		\n"
"			Ain = fract(frm1)/aTX[0],						// atx[0] == mnCR		\n"
"			off0 = vec2( 1.0/4.0, 1.0/8.0 );										\n"
"	if( DIVxy.x < 1 )							\n"
" 		off0.x = 0.0;							\n"
"	if( DIVxy.y < 1 )							\n"
" 		off0.y = 0.0;							\n"
"	vec4	A = texture2D( gpdTX_ut, frm0 + off0 )*0x100,	\n"
"			B;								\n"
"																						\n"
"	gl_FragColor = vec4( texture2D( gpdTX_bg, fr_uv ).rgb, 0 );				// BG		\n"
"	gl_FragColor *= gl_FragColor;											// BG		\n"
"	vec4	fr		= cr_lut( A.ba+vec2(0xb0,0), gpdTX_loCRL, gpdTX_loWH ),				\n"
"			fr_rgb	= texture2D( gpdTX_lo, fr.zw ),										\n"
"			cl		= cr_lut( A.rg, gpdTX_loCRL, gpdTX_loWH ),							\n"
"			cl_rgb	= texture2D( gpdTX_lo, cl.zw );										\n"
"	if( A.b != 0 )																		\n"
"		gl_FragColor += texture2D( gpdTX_lo, fr.xy+Ain )*fr_rgb;						\n"
"																						\n"
"	if( A.r != 0 ) {																	\n"
"		if( A.r <= 0x60 )																\n"
"			B = texture2D( gpdTX_lo, cl.xy+Ain )*cl_rgb;								\n"
"		else {																			\n"
"			cl.zw = (A.rr - vec2( 0x20, -0x20 ))/0x10;									\n"
"																						\n"
"			cl.z = texture2D( gpdTX_lo,													\n"
"											floor(vec2(fract(cl.z)*0x10, cl.z)) 		\n"
"											/ gpdTX_loWH								\n"
"								).a;													\n"
"			cl.w = texture2D( gpdTX_lo,													\n"
"											floor(vec2(fract(cl.w)*0x10, cl.w)) 		\n"
"											/ gpdTX_loWH								\n"
"								).a;													\n"
"			cl.zw *= 0x100;																\n"
"			if( cl.z >= 0x41 &&  cl.z <= 0x5a )											\n"
"				cl.w += 0x68;															\n"
"			else																		\n"
"				cl.w += 0x60;															\n"
"																						\n"
"			cl.zw /= 8;																	\n"
"			cl = vec4( 																					\n"
"							floor(vec2(fract(cl.z)*0x8, cl.z)),											\n"
"							floor(vec2(fract(cl.w)*0x8, cl.w))											\n"
"						) / vec2( 8, 32 ).xyxy + Ain.xyxy;												\n"
"			B = max( texture2D(gpdTX_lo, cl.xy ), texture2D(gpdTX_lo, cl.zw ) ) * cl_rgb;				\n"
"		}																								\n"
"																										\n"
"		if( (B.r+B.g+B.b) > 1.0 )																		\n"
"		{																								\n"
"			gl_FragColor = B;																			\n"
//"			return;																						\n"
"		} else																							\n"
"			gl_FragColor += B;																			\n"
"	}																									\n"
"																										\n"
"																										\n"
"	vec4 frnt = vec4(0.0,0.0,0.0,0.0);																	\n"
"	frm1 *= vec2(2.0,3.0);	// (frm1 = fr_uv * FRMwh) *= 2;												\n"
"	frm0 *= vec2(2.0,3.0);	// frm0 = fr_uv * FRMwh*2 / aTX[2];		// aTX[2] == TXwh					\n"
//"	off0 *= 2.0;																						\n"
//"	off0.y += 1.0/3.0;																					\n"
"	vec2	off2x3 = 1.0/aTX[2],										// aTX[2] == TXwh				\n"
"			t2x3 = 1.0/(aTX[3]*vec2( 2.0, 3.0 ));						// aTX[3] == mn_iso_CR			\n"
"	Ain = t2x3*fract(frm1);												\n"
"																										\n"
"	A = texture2D( gpdTX_ut, frm0 + off0 )*0x100;														\n"
"	cl		= cr_lut( ac_more(A), gpdTX_hiCRL, gpdTX_loWH );											\n"
"	A 		= texture2D( gpdTX_hi, cl.xy+Ain+t2x3*vec2( 0, 2 ) );										\n"
"	if( A.g*A.a > 0.75 )																				\n"
"	{	gl_FragColor = A.ggga*texture2D( gpdTX_lo, cl.zw ); return; }									\n"
"																										\n"
"	A = texture2D( gpdTX_ut, frm0 + off0 + off2x3*vec2( -1, 0 ) )*0x100;								\n"
"	cl		= cr_lut( ac_more(A), gpdTX_hiCRL, gpdTX_loWH );											\n"
"	A 		= texture2D( gpdTX_hi, cl.xy+Ain+t2x3*vec2( 1, 2 ) );										\n"
"	if( A.g*A.a > 0.75 )																				\n"
"	{	gl_FragColor = A.ggga*texture2D( gpdTX_lo, cl.zw ); return; }									\n"
"																										\n"
"																										\n"
"	A = texture2D( gpdTX_ut, frm0 + off0 + off2x3*vec2(  0, 1 ) )*0x100;								\n"
"	cl		= cr_lut( ac_more(A), gpdTX_hiCRL, gpdTX_loWH );											\n"
"	A 		= texture2D( gpdTX_hi, cl.xy+Ain+t2x3*vec2( 0, 1 ) );										\n"
"	if( A.g*A.a > 0.75 )																				\n"
"	{	gl_FragColor = A.ggga*texture2D( gpdTX_lo, cl.zw ); return; }									\n"
"																										\n"
"	A = texture2D( gpdTX_ut, frm0 + off0 + off2x3*vec2( -1, 1 ) )*0x100;								\n"
"	cl		= cr_lut( ac_more(A), gpdTX_hiCRL, gpdTX_loWH );											\n"
"	A 		= texture2D( gpdTX_hi, cl.xy+Ain+t2x3*vec2( 1, 1 ) );										\n"
"	if( A.g*A.a > 0.75 )																				\n"
"	{	gl_FragColor = A.ggga*texture2D( gpdTX_lo, cl.zw ); return; }									\n"
"																										\n"
"																										\n"
"	A = texture2D( gpdTX_ut, frm0 + off0 + off2x3*vec2(  0, 2 ) )*0x100;								\n"
"	cl		= cr_lut( ac_more(A), gpdTX_hiCRL, gpdTX_loWH );											\n"
"	A 		= texture2D( gpdTX_hi, cl.xy+Ain+t2x3*vec2( 0, 0 ) );										\n"
"	if( A.g*A.a > 0.75 )																				\n"
"	{	gl_FragColor = A.ggga*texture2D( gpdTX_lo, cl.zw ); return; }									\n"
"																										\n"
"	A = texture2D( gpdTX_ut, frm0 + off0 + off2x3*vec2( -1, 2 ) )*0x100;								\n"
"	cl		= cr_lut( ac_more(A), gpdTX_hiCRL, gpdTX_loWH );											\n"
"	A 		= texture2D( gpdTX_hi, cl.xy+Ain+t2x3*vec2( 1, 0 ) );										\n"
"	if( A.g*A.a > 0.75 )																				\n"
"	{	gl_FragColor = A.ggga*texture2D( gpdTX_lo, cl.zw ); return; }									\n"
"																										\n"

"	gl_FragColor += frnt;																				\n"
"}																					\n\0";