char gpsGLSLfrgISO[] = {
"#version 120																							\n"
"varying vec2 fr_uv;																					\n"
"uniform sampler2D tex0;					// MINI_CHAR_xXy_zXw.png									\n"
"uniform sampler2D tex1;					// BackGround												\n"
"uniform sampler2D tex2;					// MINI 	ABGR?											\n"
"										// U4		XYZW											\n"
"										//			cFcA 											\n"
"//uniform sampler2D tex3;				// CUBE														\n"
"uniform vec2 tgPX;																						\n"
"uniform vec2 DIVxy;																					\n"
"uniform vec2 FRMwh;																					\n"
"uniform vec2 aTX[8];\n"
"#define gpdTXmin	tex0																				\n"
"#define gpdTXbg		tex1																					\n"
"#define gpdTXutf	tex2\n"
"#define gpdTXcrl	vec3( aTX[0], 4 )		// aTX[0] = vec2( 32, 32 )									\n"
"#define gpdTXwh	vec2( 1024, 1536 )																	\n"
"#define gpdTXiz	vec2( 0, 3.0/1536 )	\n"
"vec4 cr_lut( vec4 rgba, vec3 crl, vec2 lwh ) 				// crl.xyz ColRowLut 	// lwh LutWH		\n"
"{\n"
"	// MINI\n"
"	// U4		\n"
"	// XYZW\n"
"	// ABGR?\n"
"	// cFcA\n"
"	vec2 ac = (rgba.rg/crl.xz);																			\n"
"	vec4 o = vec4( 																						\n"
"					floor( vec2( fract(ac.x)*crl.x, ac.x )	),							// char			\n"
"					floor( vec2( fract(ac.y)*crl.z, ac.y+(1.0/3.0) )	)  				// LUT			\n"
"				) / vec4( crl.xy, lwh ) + vec2(0.0, rgba.b*0.25).xyxx;									\n"
"	if( ac.y > crl.z )																					\n"
"		o.w += 1.0;																						\n"
"	return o;																							\n"
"}\n"
"void main()																							\n"
"{\n"
"	const vec4 m0p13 = vec3(-1,0,1, 1.0/3.0);\n"
"	vec2	frm1 = fr_uv*FRMwh,																			\n"
"			frm0 = frm1/aTX[2],								// atx[2] == TXwh							\n"
"			t2x3 = vec2( 1.0/2.0, m0p13.w )/gpdTXcrl.xy,	// aTX[0] == mn_iso_CR_32x32				\n"
"			Ain = fract(frm1)*t2x3,							// atx[0] == mnCR							\n"
"			off0 = vec2( 1.0/2.0, 1.0/4.0 ),															\n"
"			off2x3 = 1.0/aTX[2];							// aTX[3] == mn_iso_CR	\n"
"			\n"
"	gl_FragColor = vec4( texture2D( gpdTXbg, fr_uv ).rgb, 0 );	// BG						\n"
"	\n"
"	if( DIVxy.x < 1 )																					\n"
" 		off0.x = 0.0;																					\n"
"	if( DIVxy.y < 1 )																					\n"
" 		off0.y = 0.0;																					\n"
"	\n"
"	// FRM -------------------------------------------------------------------------------\n"
"	vec4	O, A, B,\n"
"			C, D,\n"
"			E,F = texture2D( gpdTXutf, frm0 + off0+vec2(0.0,0.5) )*0x100,\n"
"			cl;\n"
"	if( F.r > 0 ) {																									\n"
"		cl = cr_lut( F, gpdTXcrl*vec3(1,3,1), gpdTXwh );\n"
"		F = texture2D( gpdTXmin, cl.xy+Ain+vec2(0,5.0/32.0) );\n"
"	}\n"
"	// UTF		// MIN		\n"
"	// -1 0		t2x3*vec2	// UT		// MIN														\n"
"	// +-+-+	+--+--+		// -1 0		//  0 1																				\n"
"	// |A|B|-1	|00|10|		// +-+-+	// +-+-+																		\n"
"	// +-+-+	+--+--+		// |D|C| -1	// |E|F| 0																	\n"
"	// |C|D|0	|01|11|		// +-+-+	// +-+-+																			\n"
"	// +-+-+	+--+--+		// |B|A| 0	// |A|B| 1																		\n"
"	// |E|F|1	|02|12|		// +-+-+	// +-+-+																		\n"
"	// +-+-+	+--+--+     // |F|E| 1	// |C|D| 2	\n"
"	// MINI ----------------// +-+-+	// +-+-+	--------------------------------------\n"
"	if( F.a < 0.25 ) {\n"
"		E = texture2D( gpdTXutf, frm0 + off0 )*0x100;\n"
"			cl = cr_lut( E, gpdTXcrl, gpdTXwh );\n"
"		if( E.r > 0 ) {\n"
"			E = texture2D( gpdTXmin, cl.xy+Ain+t2x3*vec2( 0, 2 )-gpdTXiz );\n"
"		} else \n"
"			E = m0p13.yyyy;\n"
"		if( cl.w >= 1.0 ){\n"
"			// ki van jelÃ¶lve\n"
"			if( (E.a*E.g)>0.5 )\n"
"				F = texture2D( gpdTXmin, cl.zw );\n"
"			else\n"
"				F = m0p13.yyyz;\n"
"		} else {\n"
"			E *= texture2D( gpdTXmin, cl.zw );\n"
"			\n"
"			A = texture2D( gpdTXutf, frm0 + off0 + off2x3*vec2( 0, 2) )*0x100;	\n"
"			B = texture2D( gpdTXutf, frm0 + off0 + off2x3*vec2(-1, 2) )*0x100;	\n"
"			C = texture2D( gpdTXutf, frm0 + off0 + off2x3*vec2( 0, 1) )*0x100;	\n"
"			D = texture2D( gpdTXutf, frm0 + off0 + off2x3*vec2(-1, 1) )*0x100;	\n"
"			F = texture2D( gpdTXutf, frm0 + off0 + off2x3*vec2(-1, 0) )*0x100;	\n"
"			if( A.r > 0 ) {\n"
"				cl = cr_lut( A, gpdTXcrl, gpdTXwh );\n"
"				A = texture2D( gpdTXmin, cl.xy+Ain+t2x3*vec2( 0, 0 )-gpdTXiz )*texture2D( gpdTXmin, cl.zw );\n"
"			} else \n"
"				A = m0p13.yyyy; \n"
"			if( B.r > 0 ) {\n"
"				cl = cr_lut( B, gpdTXcrl, gpdTXwh );\n"
"				B = texture2D( gpdTXmin, cl.xy+Ain+t2x3*vec2( 1, 0 )-gpdTXiz )*texture2D( gpdTXmin, cl.zw );\n"
"			} else \n"
"				B = m0p13.yyyy; \n"
"			\n"
"			if( C.r > 0 ) {\n"
"				cl = cr_lut( C, gpdTXcrl, gpdTXwh );\n"
"				C = texture2D( gpdTXmin, cl.xy+Ain+t2x3*vec2( 0, 1 )-gpdTXiz )*texture2D( gpdTXmin, cl.zw );\n"
"			} else\n"
"				C = m0p13.yyyy;\n"
"			\n"
"			if( D.r > 0 ) {\n"
"				cl = cr_lut( D, gpdTXcrl, gpdTXwh );\n"
"				D = texture2D( gpdTXmin, cl.xy+Ain+t2x3*vec2( 1, 1 )-gpdTXiz )*texture2D( gpdTXmin, cl.zw );\n"
"			} else \n"
"				D = m0p13.yyyy; \n"
"			\n"
"			if( F.r > 0 ) {\n"
"				cl = cr_lut( F, gpdTXcrl, gpdTXwh );\n"
"				F = texture2D( gpdTXmin, cl.xy+Ain+t2x3*vec2( 1, 2 )-gpdTXiz )*texture2D( gpdTXmin, cl.zw );\n"
"			} else\n"
"				F = m0p13.yyyy; \n"
"			\n"
"			F = max(max(max(A,B),C), \n"
"					max(max(D,E),F));\n"
"			\n"
"		}\n"
"	} else \n"
"		F *= texture2D( gpdTXmin, cl.zw );\n"
"	\n"
"	F.a *= dot(F.rgb, m0p13.www );\n"
" 	if( F.a < 0.25 ) \n"
"		discard; \n"
"}\n"
};